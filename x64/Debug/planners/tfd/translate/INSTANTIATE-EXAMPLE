Beispiel für die Instantiierung von ADL-Aktionen nach erfolgter Exploration.
Folgende Informationen werden benötigt:

* Für jedes Prädikat:
  - Statisch oder dynamisch?
* Für jeden Fakt:
  - Erreichbar oder nicht (Überapproximation)?
* Für jeden existenzquantifizierten Knoten in der Bedingung:
  - Welche Belegungen der quantifizierten Variablen sind in der
    Überapproximation erreichbar, gegeben eine Belegung der in der
    Teilbedingung freien Variablen?
   
Als Beispiel betrachten wir das upstream-Axiom der PSR-Domäne,
Problem middle/adl-derivedpredicates/p01-s17-n2-l2-f30.pddl.

Das Upstream-Axiom sieht nach Umwandlung der Typen in Bedingungen wie folgt
aus:

Consequence:  (upstream ?x ?sx ?y ?sy)
Condition:    (1) wobei
  (1): (and    (device ?x) (side ?sx) (device ?y) (side ?sy) (closed ?x) (2))
  (2): (or     (3) (4) (5))
  (3): (and    (= ?sx side1) (con ?x side2 ?y ?sy))
  (4): (and    (= ?sx side2) (con ?x side1 ?y ?sy))
  (5): (exists (?z) (6))
  (6): (and    (device ?z) (closed ?z) (7))
  (7): (or     (8) (9))
  (8): (and    (con ?z side1 ?y ?sy) (upstream ?x ?sx ?z side2))
  (9): (and    (con ?z side2 ?y ?sy) (upstream ?x ?sx ?z side1))

Wir wollen das Schema für den Spezialfall (upstream cb1 side1 sd3 side2)
instantiieren.

=> Belege Variablen: ?x = cb1, ?sx = side1, ?y = sd3, ?sy = side2

Teste (1): Konjunktion.
  (device cb1): Statisch, erreichbar =>  True.
  (side side1): Statisch, erreichbar =>  True.
  (device sd3): Statisch, erreichbar =>  True.
  (side side2): Statisch, erreichbar =>  True.
  (closed cb1): Dynamisch, erreichbar => (closed cb1).
  (2): Siehe dort.
  => Resultat: (and (closed cb1) (closed sd2) (upstream cb1 side1 sd2 side1))

Teste (2): Disjunktion.
  (3): Siehe dort => False.
  (4): Siehe dort => False.
  (5): Siehe dort.
  => Resultat: (and (closed sd2) (upstream cb1 side1 sd2 side1))

Test (3): Konjunktion.
  (= side1 side1):           Statisch, erreichbar => True.
  (con cb1 side2 sd3 side2): Statisch, nicht erreichbar => False.
  Resultat: False.

Test (4): Konjunktion:
  (= side1 side2): Statisch, nicht erreichbar => False.
  Andere Teile müssen nicht getestet werden.
  Resultat: False.

Test (5): Existenzquantifizierung.
  Bestimme diejenigen ?z, für die (6) erreicht wurde.
  => ?z in {sd2}
  Disjunktion für die verschiedenen Werte von ?z:
    ?z = sd2: (6-sd2): Siehe dort.
  => Resultat: (and (closed sd2) (upstream cb1 side1 sd2 side1))

Test (6-sd2): Konjunktion.
  (device sd2): Statisch, erreichbar  => True.
  (closed sd2): Dynamisch, erreichbar => (closed sd2).
  (7-sd2):      Siehe dort.
  => Resultat: (and (closed sd2) (upstream cb1 side1 sd2 side1))

Test (7-sd2): Disjunktion.
  (8-sd2): Siehe dort => False.
  (9-sd2): Siehe dort.
  => Resultat: (upstream cb1 side1 sd2 side1)

Test (8-sd2): Konjunktion.
  (con sd2 side1 sd3 side2): Statisch, nicht erreichbar => False.
  Andere Teile müssen nicht getestet werden.
  Resultat: False.

Test (9-sd2): Konjunktion.
  (con sd2 side2 sd3 side2):      Statisch, erreichbar  => True.
  (upstream cb1 side1 sd2 side1): Dynamisch, erreichbar => (upstream cb1 side1 sd2 side1).
  Resultat: (upstream cb1 side1 sd2 side1).




Grundidee, um das Ganze in einen allgemeinen Algorithmus zu packen:
- Berechne für jede Teilbedingung jeder Bedingung (Vorbedingung,
  Axiomdefinition, Effektbedingung) ein Prädikat p(freevars) und exploriere
  damit. freevars sind die freien Variablen dieser Teilbedingung.
  Ausnahme: Allquantifizierte Bedingung werden nicht näher untersucht; man
  geht davon aus, dass diese immer wahr werden können. Deren *Nachfahren*
  werden jedoch durchaus untersucht!

- Beim Expandieren von existenzquantifizierten Bedingungen reicht es aus, die
  Belegungen zu betrachten, mit denen die Erreichbarkeit der zugehörigen
  Prädikatinstanz hergeleitet wurde.

- Beim Expandieren von allquantifizierten Bedingungen werden alle Belegungen
  betrachtet, die typkorrekt sind. Nach Möglichkeit denselben Teilausdruck
  nicht mehrfach expandieren, z.B. durch Memoization.

- Beim Expandieren von universellen konditionalen Effekten ebenfalls alle
  typkorrekten Belegungen durchgehen.


Teilweise offene Probleme:

[1] Allquantifizierte Bedingungen.
    Auftreten: - In PSR sehr eingeschränkt in den Vorbedingungen der
                 weitgehend trivialen Operatoren "open" und "close".
               - In PSR sehr eingeschränkt im Goal.
               - In Promela sehr eingeschränkt in den Vorbedingungen der
                 strukturell einfachen Operatoren "perform-trans" und
                 "activate-trans".
               - In Promela wesentlich komplexer beim Axiom "blocked".

[2] Konditionale Effekte, insbesondere universeller Art.
    Auftreten: - In PSR sehr eingeschränkt in dem sehr einfachen
                 Operator "wait".


DIENSTAG: Vollständiger Pseudocode.
